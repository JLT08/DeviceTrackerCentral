jlt@infratest:/opt/DeviceTrackerCentral$ npm run dev

> rest-express@1.0.0 dev
> tsx server/index.ts

3:01:32 AM [express] serving on port 5000
Email configuration error: Error: Missing credentials for "PLAIN"
    at SMTPConnection._formatError (/opt/DeviceTrackerCentral/node_modules/nodemailer/lib/smtp-connection/index.js:809:19)
    at SMTPConnection.login (/opt/DeviceTrackerCentral/node_modules/nodemailer/lib/smtp-connection/index.js:454:38)
    at /opt/DeviceTrackerCentral/node_modules/nodemailer/lib/smtp-transport/index.js:375:32
    at SMTPConnection.<anonymous> (/opt/DeviceTrackerCentral/node_modules/nodemailer/lib/smtp-connection/index.js:215:17)
    at Object.onceWrapper (node:events:631:28)
    at SMTPConnection.emit (node:events:517:28)
    at SMTPConnection._actionEHLO (/opt/DeviceTrackerCentral/node_modules/nodemailer/lib/smtp-connection/index.js:1371:14)
    at SMTPConnection._processResponse (/opt/DeviceTrackerCentral/node_modules/nodemailer/lib/smtp-connection/index.js:993:20)
    at SMTPConnection._onData (/opt/DeviceTrackerCentral/node_modules/nodemailer/lib/smtp-connection/index.js:774:14)
    at SMTPConnection._onSocketData (/opt/DeviceTrackerCentral/node_modules/nodemailer/lib/smtp-connection/index.js:195:44) {
  code: 'EAUTH',
  command: 'API'
}
Note: Make sure to use your regular Gmail password and enable "Less secure app access" in Gmail settings

file:///opt/DeviceTrackerCentral/node_modules/@neondatabase/serverless/index.mjs:1345
o?t(o):n(u)},"cb"),s=new r(function(o,u){n=o,t=u}).catch(o=>{throw Error.captureStackTrace(
                                                                         ^
ErrorEvent {
  [Symbol(kTarget)]: WebSocket {
    _events: [Object: null prototype] {
      error: [Function: onError] {
        [Symbol(kIsForOnEventAttribute)]: false,
        [Symbol(kListener)]: [Function (anonymous)]
      },
      message: [Function: onMessage] {
        [Symbol(kIsForOnEventAttribute)]: false,
        [Symbol(kListener)]: [Function (anonymous)]
      },
      close: [Function: onClose] {
        [Symbol(kIsForOnEventAttribute)]: false,
        [Symbol(kListener)]: [Function (anonymous)]
      },
      open: [Function: onOpen] {
        [Symbol(kIsForOnEventAttribute)]: false,
        [Symbol(kListener)]: [Function: handleWebSocketOpen]
      }
    },
    _eventsCount: 4,
    _maxListeners: undefined,
    _binaryType: 'arraybuffer',
    _closeCode: 1006,
    _closeFrameReceived: false,
    _closeFrameSent: false,
    _closeMessage: Buffer(0) [Uint8Array] [],
    _closeTimer: null,
    _errorEmitted: true,
    _extensions: {},
    _paused: false,
    _protocol: '',
    _readyState: 3,
    _receiver: null,
    _sender: null,
    _socket: null,
    _bufferedAmount: 0,
    _isServer: false,
    _redirects: 0,
    _autoPong: true,
    _url: 'wss://localhost/v2',
    _req: null,
    [Symbol(kCapture)]: false
  },
  [Symbol(kType)]: 'error',
  [Symbol(kError)]: Error: connect ECONNREFUSED 127.0.0.1:443
      at __node_internal_captureLargerStackTrace (node:internal/errors:496:5)
      at __node_internal_exceptionWithHostPort (node:internal/errors:671:12)
      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1555:16) {
    errno: -111,
    code: 'ECONNREFUSED',
    syscall: 'connect',
    address: '127.0.0.1',
    port: 443
  },
  [Symbol(kMessage)]: 'connect ECONNREFUSED 127.0.0.1:443'
}

Node.js v18.20.6
